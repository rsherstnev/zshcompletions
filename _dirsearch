#compdef dirsearch

local http_codes args

args=(
	'(-u --url)'{-u,--url}'[Target URL]:enter URL:()'
	'(-L --url-list)'{-L,--url-list}'[Targets URL list]:select URL list:_files'
	'(-e --extensions)'{-e,--extensions}'[List of comma separated extensions (e.g. php,asp)]:enter comma separated extensions:()'
	'(-E --extensions-list)'{-E,--extensions-list}'[Use predefined list of common extensions]'
	'(-w --wordlist)'{-w,--wordlist}'[Wordlist]:select wordlists:_files'
	'(-l --lowercase)'{-l,--lowercase}
	'(-f --force-extensions)'{-f,--force-extensions}'[Force extensions for every wordlist entry (like in DirBuster)]'
	'(-s --delay)'{-s,--delay}'[Delay between requests (float number)]:enter delay:()'
	'(-r --recursive)'{-r,--recursive}'[Bruteforce recursively]'
	'(-R --recursive-level-max)'{-R,--recursive-level-max}'[Max recursion level (subdirs) (default: 1 \[only rootdir + 1 dir\])]:enter level:()'
	'--suppress-empty'
	'(--scan-subdir --scan-subdirs)'{--scan-subdir,--scan-subdirs}'[Scan subdirectories of the given URL (separated by comma)]:enter comma separated subdirs:()'
	'(--exclude-subdir --exclude-subdirs)'{--exclude-subdir,--exclude-subdirs}'[Exclude the following subdirectories during recursive scan (separated by comma)]:enter comma separated subdirs:()'
	'(-t --threads)'{-t,--threads}'[Number of threads]:enter number of threads:()'
	'(-x --exclude-status)'{-x,--exclude-status}'[Exclude status codes, separated by comma (e.g. 301,500)]:select exclude status codes:_values -s "," $http_codes'
	'--exclude-texts[Exclude responses by texts, separated by comma (e.g. "Not found","Error")]:enter comma separated texts:()'
	'--exclude-regexps[Exclude responses by regexps, separated by comma (e.g. "Not found\[a-z\]{1}","^Error$")]:enter comma separated regexps:()'
	'(-c --cookie)'{-c,--cookie}'[Cookie HTTP header]:enter cookie:()'
	'(--ua --user-agent)'{--ua,--user-agent}'[User-Agent HTTP header]:enter user-agent:()'
	'(-F --follow-redirects)'{-F,--follow-redirects}'[Follow redirects]'
	'(-H --header)'{-H,--header}'[HTTP header (e.g. --header "Referer: example.com" --header "User-Agent: IE")]:enter header:()'
	'(--random-agents --random-user-agents)'{--random-agents,--random-user-agents}'[Use random User-Agent in requests]'
	'--timeout[Connection timeout]:enter timeout:()'
	'--ip[Resolve name to IP address]:enter IP:()'
	'(--proxy --http-proxy)'{--proxy,--http-proxy}'[Use HTTP proxy in format "IP:PORT" (e.g. localhost:8080)]:enter proxy:()'
	'--http-method[HTTP method to use, (default: GET), possible also: HEAD; POST]:select HTTP method:_values method GET HEAD POST'
	'--max-retries[Max retries]:enter amount of retries:()'
	'(-b --request-by-hostname)'{-b,--request-by-hostname}'[By default dirsearch will request by IP for speed. This forces requests by hostname]'
	'--simple-report[Dump results to file: only found paths]:select file:_files'
	'--plain-text-report[Dump results to file: found paths with status codes]:select file:_files'
	'--json-report[Dump results to file in JSON format]:select file:_files'
)

http_codes=(
	'100[Continue]'
	'101[Switching Protocols]'
	'102[Processing]'
	'200[OK]'
	'201[Created]'
	'202[Accepted]'
	'203[Non-Authoritative Information]'
	'204[No Content]'
	'205[Reset Content]'
	'206[Partial Content]'
	'207[Multi-Status]'
	'208[Already Reported]'
	'226[IM Used]'
	'300[Multiple Choices]'
	'301[Moved Permanently]'
	'302[Found]'
	'303[See Other]'
	'304[Not Modified]'
	'305[Use Proxy]'
	'307[Temporary Redirect]'
	'308[Permanent Redirect]'
	'400[Bad Request]'
	'401[Unauthorized]'
	'402[Payment Required]'
	'403[Forbidden]'
	'404[Not Found]'
	'405[Method Not Allowed]'
	'406[Not Acceptable]'
	'407[Proxy Authentication Required]'
	'408[Request Timeout]'
	'409[Conflict]'
	'410[Gone]'
	'411[Length Required]'
	'412[Precondition Failed]'
	'413[Payload Too Large]'
	'414[URI Too Long]'
	'415[Unsupported Media Type]'
	'416[Range Not Satisfiable]'
	'417[Expectation Failed ]'
	'418[Iâ€™m a teapot]'
	'419[Authentication Timeout]'
	'421[Misdirected Request]'
	'422[Unprocessable Entity]'
	'423[Locked]'
	'424[Failed Dependency]'
	'426[Upgrade Required]'
	'428[Precondition Required]'
	'429[Too Many Requests]'
	'431[Request Header Fields Too Large]'
	'449[Retry With]'
	'451[Unavailable For Legal Reasons]'
	'499[Client Closed Request]'
	'500[Internal Server Error]'
	'501[Not Implemented]'
	'502[Bad Gateway]'
	'503[Service Unavailable]'
	'504[Gateway Timeout]'
	'505[HTTP Version Not Supported]'
	'506[Variant Also Negotiates]'
	'507[Insufficient Storage]'
	'508[Loop Detected]'
	'509[Bandwidth Limit Exceeded ]'
	'510[Not Extended]'
	'511[Network Authentication Required]'
	'520[Unknown Error]'
	'521[Web Server Is Down]'
	'522[Connection Timed Out]'
	'523[Origin Is Unreachable]'
	'524[A Timeout Occurred]'
	'525[SSL Handshake Failed]'
	'526[Invalid SSL Certificate]'
)

_arguments $args && return 0
